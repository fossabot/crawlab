// Code generated by "enumer -type RegistryType -linecomment -trimprefix Registry"; DO NOT EDIT.

package runtime

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the enumer command to generate them again.
	var x [1]struct{}
	_ = x[RegistryMaster-0]
	_ = x[RegistryEtcd-1]
	_ = x[RegistryService-2]
	_ = x[RegistryUnknown-3]
}
func (i RegistryType) Values() []string {
	return []string{
		"Master",
		"Etcd",
		"Service",
		"Unknown",
	}
}

var _RegistryType_kv = map[string]int64{
	"Master":  0,
	"Etcd":    1,
	"Service": 2,
	"Unknown": 3,
}

func (i RegistryType) KV() map[string]int64 {
	return _RegistryType_kv
}

var _RegistryType_vk = map[int64]string{
	0: "Master",
	1: "Etcd",
	2: "Service",
	3: "Unknown",
}

func (i RegistryType) VK() map[int64]string {
	return _RegistryType_vk
}

const _RegistryType_name = "MasterEtcdServiceUnknown"

var _RegistryType_index = [...]uint8{0, 6, 10, 17, 24}

func (i RegistryType) String() string {
	if i < 0 || i >= RegistryType(len(_RegistryType_index)-1) {
		return "RegistryType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RegistryType_name[_RegistryType_index[i]:_RegistryType_index[i+1]]
}
